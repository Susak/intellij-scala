trait ArgumentExprs1 {
  def f(foo: Int, bar: String)(implicit ev0: Ev0, ev1: Ev1) = 1
  f(
    23,
    "bar",
  )(
    Ev0,
    Ev1,
  )

  // test arg exprs in the presence of varargs
  def g(x: Int, y: Int*) = 1
  g(1,2,
  )
  g(1,List(2, 3): _*,
  )
}
-----
ScalaFile
  ScTrait: ArgumentExprs1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ArgumentExprs1')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('foo')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: bar
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('bar')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: ev0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('ev0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Ev0
                    CodeReferenceElement: Ev0
                      PsiElement(identifier)('Ev0')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: ev1
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('ev1')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Ev1
                    CodeReferenceElement: Ev1
                      PsiElement(identifier)('Ev1')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          Literal
            PsiElement(integer)('1')
        PsiWhiteSpace('\n  ')
        MethodCall
          MethodCall
            ReferenceExpression: f
              PsiElement(identifier)('f')
            ArgumentList
              PsiElement(()('(')
              PsiWhiteSpace('\n    ')
              Literal
                PsiElement(integer)('23')
              PsiElement(,)(',')
              PsiWhiteSpace('\n    ')
              Literal
                PsiElement(string content)('"bar"')
              PsiElement(,)(',')
              PsiWhiteSpace('\n  ')
              PsiElement())(')')
          ArgumentList
            PsiElement(()('(')
            PsiWhiteSpace('\n    ')
            ReferenceExpression: Ev0
              PsiElement(identifier)('Ev0')
            PsiElement(,)(',')
            PsiWhiteSpace('\n    ')
            ReferenceExpression: Ev1
              PsiElement(identifier)('Ev1')
            PsiElement(,)(',')
            PsiWhiteSpace('\n  ')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: g
          PsiComment(comment)('// test arg exprs in the presence of varargs')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('g')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: y
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('y')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(identifier)('*')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          Literal
            PsiElement(integer)('1')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: g
            PsiElement(identifier)('g')
          ArgumentList
            PsiElement(()('(')
            Literal
              PsiElement(integer)('1')
            PsiElement(,)(',')
            Literal
              PsiElement(integer)('2')
            PsiElement(,)(',')
            PsiWhiteSpace('\n  ')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: g
            PsiElement(identifier)('g')
          ArgumentList
            PsiElement(()('(')
            Literal
              PsiElement(integer)('1')
            PsiElement(,)(',')
            TypedStatement
              MethodCall
                ReferenceExpression: List
                  PsiElement(identifier)('List')
                ArgumentList
                  PsiElement(()('(')
                  Literal
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  Literal
                    PsiElement(integer)('3')
                  PsiElement())(')')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SequenceArgumentType
                PsiElement(_)('_')
                PsiElement(identifier)('*')
            PsiElement(,)(',')
            PsiWhiteSpace('\n  ')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')